.IFJcode19
DEFVAR GF@$op1
DEFVAR GF@$op2
DEFVAR GF@$op1Type
DEFVAR GF@$op2Type
DEFVAR GF@$temp
JUMP $$main
LABEL $error
EXIT int@4
LABEL $divisionByZero
EXIT int@9
LABEL $print
TYPE GF@$op1Type GF@$op1
JUMPIFNEQ $printEnd GF@$op1Type string@nil
WRITE string@None
RETURN
LABEL $printEnd
WRITE GF@$op1
RETURN
LABEL $adds
JUMPIFEQ $addsSameType GF@$op1Type GF@$op2Type
JUMPIFEQ $addsOp1Int GF@$op1Type string@int
JUMPIFEQ $addsOp1Float GF@$op1Type string@float
JUMP $error
LABEL $addsOp1Int
JUMPIFNEQ $error GF@$op2Type string@float
INT2FLOAT GF@$op1 GF@$op1
JUMP $addsAddFinish
LABEL $addsOp1Float
JUMPIFNEQ $error GF@$op2Type string@int
INT2FLOAT GF@$op2 GF@$op2
JUMP $addsAddFinish
LABEL $addsSameType
JUMPIFEQ $addsAddFinish GF@$op1Type string@int
JUMPIFEQ $addsAddFinish GF@$op1Type string@float
JUMPIFEQ $addsConcatFinish GF@$op1Type string@string
JUMP $error
LABEL $addsAddFinish
PUSHS GF@$op1
PUSHS GF@$op2
ADDS
RETURN
LABEL $addsConcatFinish
CONCAT GF@$temp GF@$op1 GF@$op2
PUSHS GF@$temp
RETURN
LABEL $subs
JUMPIFEQ $subsSameType GF@$op1Type GF@$op2Type
JUMPIFEQ $subsOp1Int GF@$op1Type string@int
JUMPIFEQ $subsOp1Float GF@$op1Type string@float
JUMP $error
LABEL $subsOp1Int
JUMPIFNEQ $error GF@$op2Type string@float
INT2FLOAT GF@$op1 GF@$op1
JUMP $subsFinish
LABEL $subsOp1Float
JUMPIFNEQ $error GF@$op2Type string@int
INT2FLOAT GF@$op2 GF@$op2
JUMP $subsFinish
LABEL $subsSameType
JUMPIFEQ $subsFinish GF@$op1Type string@int
JUMPIFEQ $subsFinish GF@$op1Type string@float
JUMP $error
LABEL $subsFinish
PUSHS GF@$op1
PUSHS GF@$op2
SUBS
RETURN
LABEL $muls
JUMPIFEQ $mulsSameType GF@$op1Type GF@$op2Type
JUMPIFEQ $mulsOp1Int GF@$op1Type string@int
JUMPIFEQ $mulsOp1Float GF@$op1Type string@float
JUMP $error
LABEL $mulsOp1Int
JUMPIFNEQ $error GF@$op2Type string@float
INT2FLOAT GF@$op1 GF@$op1
JUMP $mulsFinish
LABEL $mulsOp1Float
JUMPIFNEQ $error GF@$op2Type string@int
INT2FLOAT GF@$op2 GF@$op2
JUMP $mulsFinish
LABEL $mulsSameType
JUMPIFEQ $mulsFinish GF@$op1Type string@int
JUMPIFEQ $mulsFinish GF@$op1Type string@float
JUMP $error
LABEL $mulsFinish
PUSHS GF@$op1
PUSHS GF@$op2
MULS
RETURN
LABEL $divs
JUMPIFEQ $divsSameType GF@$op1Type GF@$op2Type
JUMPIFEQ $divsOp1Int GF@$op1Type string@int
JUMPIFEQ $divsOp1Float GF@$op1Type string@float
JUMP $error
LABEL $divsOp1Int
JUMPIFNEQ $error GF@$op2Type string@float
INT2FLOAT GF@$op1 GF@$op1
JUMP $divsFinish
LABEL $divsOp1Float
JUMPIFNEQ $error GF@$op2Type string@int
INT2FLOAT GF@$op2 GF@$op2
JUMP $divsFinish
LABEL $divsSameType
JUMPIFEQ $divsFinish GF@$op1Type string@float
JUMPIFEQ $divsSameTypeInt GF@$op1Type string@int
JUMP $error
LABEL $divsSameTypeInt
INT2FLOAT GF@$op1 GF@$op1
INT2FLOAT GF@$op2 GF@$op2
JUMP $divsFinish
LABEL $divsFinish
JUMPIFEQ $divisionByZero GF@$op2 float@0x0p+0
PUSHS GF@$op1
PUSHS GF@$op2
DIVS
RETURN
LABEL $idivs
JUMPIFEQ $idivsSameType GF@$op1Type GF@$op2Type
JUMPIFEQ $idivsOp1Int GF@$op1Type string@int
JUMPIFEQ $idivsOp1Float GF@$op1Type string@float
JUMP $error
LABEL $idivsOp1Int
JUMPIFNEQ $error GF@$op2Type string@float
FLOAT2INT GF@$op2 GF@$op2
JUMP $idivsFinish
LABEL $idivsOp1Float
JUMPIFNEQ $error GF@$op2Type string@int
FLOAT2INT GF@$op1 GF@$op1
JUMP $idivsFinish
LABEL $idivsSameType
JUMPIFEQ $idivsFinish GF@$op1Type string@int
JUMPIFEQ $idivsSameTypeFloat GF@$op1Type string@float
JUMP $error
LABEL $idivsSameTypeFloat
FLOAT2INT GF@$op1 GF@$op1
FLOAT2INT GF@$op2 GF@$op2
JUMP $idivsFinish
LABEL $idivsFinish
JUMPIFEQ $divisionByZero GF@$op2 int@0
PUSHS GF@$op1
PUSHS GF@$op2
IDIVS
RETURN
LABEL $eval
POPS GF@$op1
TYPE GF@$op1Type GF@$op1
JUMPIFEQ $evalInt GF@$op1Type string@int
JUMPIFEQ $evalFloat GF@$op1Type string@float
JUMPIFEQ $evalString GF@$op1Type string@string
JUMPIFEQ $evalFalse GF@$op1Type string@nil
JUMPIFEQ $evalBool GF@$op1Type string@bool
LABEL $evalInt
JUMPIFEQ $evalFalse GF@$op1 int@0
JUMP $evalTrue
LABEL $evalFloat
JUMPIFEQ $evalFalse GF@$op1 float@0x0p+0
JUMP $evalTrue
LABEL $evalString
JUMPIFEQ $evalFalse GF@$op1 string@
JUMP $evalTrue
LABEL $evalBool
JUMPIFEQ $evalFalse GF@$op1 bool@false
JUMP $evalTrue
LABEL $evalTrue
MOVE GF@$temp bool@true
RETURN
LABEL $evalFalse
MOVE GF@$temp bool@false
RETURN
LABEL $substr
PUSHFRAME
TYPE GF@$temp LF@%1
JUMPIFNEQ $error GF@$temp string@string
TYPE GF@$temp LF@%2
JUMPIFNEQ $error GF@$temp string@int
TYPE GF@$temp LF@%3
JUMPIFNEQ $error GF@$temp string@int
DEFVAR LF@%retval
MOVE LF@%retval string@
DEFVAR LF@str_length
STRLEN LF@str_length LF@%1
DEFVAR LF@cond
LT LF@cond LF@%2 int@0
JUMPIFEQ $substrNone LF@cond bool@true
GT LF@cond LF@%2 LF@str_length
JUMPIFEQ $substrNone LF@cond bool@true
LT LF@cond LF@%3 int@0
JUMPIFEQ $substrNone LF@cond bool@true
LT LF@cond LF@str_length int@1
JUMPIFEQ $substrReturn LF@cond bool@true
JUMPIFEQ $substrReturn LF@%3 int@0
DEFVAR LF@letter
DEFVAR LF@index
MOVE LF@index LF@%2
SUB LF@str_length LF@str_length int@1
LABEL $substrLoop
GT LF@cond LF@index LF@str_length
JUMPIFEQ $substrReturn LF@cond bool@true
GETCHAR LF@letter LF@%1 LF@index
CONCAT LF@%retval LF@%retval LF@letter
ADD LF@index LF@index int@1
SUB LF@%3 LF@%3 int@1
JUMPIFNEQ $substrLoop LF@%3 int@0
JUMP $substrReturn
LABEL $substrNone
MOVE LF@%retval nil@nil
LABEL $substrReturn
POPFRAME
RETURN
LABEL $len
PUSHFRAME
TYPE GF@$temp LF@%1
JUMPIFNEQ $error GF@$temp string@string
DEFVAR LF@%retval
STRLEN LF@%retval LF@%1
POPFRAME
RETURN
LABEL $chr
PUSHFRAME
DEFVAR LF@%retval
TYPE GF@$temp LF@%1
JUMPIFNEQ $error GF@$temp string@int
LT GF@$temp LF@%1 int@0
JUMPIFEQ $error GF@$temp bool@true
GT GF@$temp LF@%1 int@255
JUMPIFEQ $error GF@$temp bool@true
INT2CHAR LF@%retval LF@%1
POPFRAME
RETURN
LABEL $ord
PUSHFRAME
DEFVAR LF@%retval
DEFVAR LF@cond
DEFVAR LF@len
DEFVAR LF@type
TYPE LF@type LF@%1
JUMPIFNEQ $error LF@type string@string
TYPE LF@type LF@%2
JUMPIFNEQ $error LF@type string@int
STRLEN LF@len LF@%1
SUB LF@len LF@len int@1
GT LF@cond LF@%2 LF@len
JUMPIFEQ $ordNone LF@cond bool@true
LT LF@cond LF@%2 int@0
JUMPIFEQ $ordNone LF@cond bool@true
STRI2INT LF@%retval LF@%1 LF@%2
POPFRAME
RETURN
LABEL $ordNone
MOVE LF@%retval nil@nil
POPFRAME
RETURN
LABEL $inputs
PUSHFRAME
DEFVAR LF@%retval
READ LF@%retval string
POPFRAME
RETURN
LABEL $inputi
PUSHFRAME
DEFVAR LF@%retval
READ LF@%retval int
POPFRAME
RETURN
LABEL $inputf
PUSHFRAME
DEFVAR LF@%retval
READ LF@%retval float
POPFRAME
RETURN
LABEL $gtes
POPS GF@$op2
POPS GF@$op1
PUSHS GF@$op1
PUSHS GF@$op2
PUSHS GF@$op1
PUSHS GF@$op2
CALL $eq
PUSHS bool@true
JUMPIFEQS $gtesTrue
CALL $glt
GTS
RETURN
LABEL $gtesTrue
PUSHS bool@true
RETURN
LABEL $ltes
POPS GF@$op2
POPS GF@$op1
PUSHS GF@$op1
PUSHS GF@$op2
PUSHS GF@$op1
PUSHS GF@$op2
CALL $eq
PUSHS bool@true
JUMPIFEQS $ltesTrue
CALL $glt
LTS
RETURN
LABEL $ltesTrue
PUSHS bool@true
RETURN
LABEL $glt
POPS GF@$op2
POPS GF@$op1
TYPE GF@$op1Type GF@$op1
TYPE GF@$op2Type GF@$op2
JUMPIFEQ $gltFinish GF@$op1Type GF@$op2Type
JUMPIFEQ $gltOp1Int GF@$op1Type string@int
JUMPIFEQ $gltOp1Float GF@$op1Type string@float
JUMPIFEQ $gltOp1Bool GF@$op1Type string@bool
EXIT int@4
LABEL $gltOp1Int
JUMPIFEQ $gltOp1IntOp2Float GF@$op2Type string@float
JUMPIFEQ $gltOp1IntOp2Bool GF@$op2Type string@bool
EXIT int@4
LABEL $gltOp1IntOp2Float
INT2FLOAT GF@$op1 GF@$op1
JUMP $gltFinish
LABEL $gltOp1IntOp2Bool
MOVE GF@$temp GF@$op2
MOVE GF@$op2 int@1
JUMPIFEQ $gltFinish GF@$temp bool@true
MOVE GF@$op2 int@0
JUMP $gltFinish
LABEL $gltOp1Float
JUMPIFEQ $gltOp1FloatOp2Int GF@$op2Type string@int
JUMPIFEQ $gltOp1FloatOp2Bool GF@$op2Type string@bool
EXIT int@4
LABEL $gltOp1FloatOp2Int
INT2FLOAT GF@$op2 GF@$op2
JUMP $gltFinish
LABEL $gltOp1FloatOp2Bool
MOVE GF@$temp GF@$op2
MOVE GF@$op2 float@0x1p+0
JUMPIFEQ $gltFinish GF@$temp bool@true
MOVE GF@$op2 float@0x0p+0
JUMP $gltFinish
LABEL $gltOp1Bool
JUMPIFEQ $gltOp1BoolOp2Int GF@$op2Type string@int
JUMPIFEQ $gltOp1BoolOp2Float GF@$op2Type string@float
EXIT int@4
LABEL $gltOp1BoolOp2Int
MOVE GF@$temp GF@$op2
MOVE GF@$op2 bool@true
JUMPIFEQ $gltFinish GF@$temp int@1
MOVE GF@$op2 bool@false
JUMP $gltFinish
LABEL $gltOp1BoolOp2Float
MOVE GF@$temp GF@$op2
MOVE GF@$op2 bool@true
JUMPIFEQ $gltFinish GF@$temp float@0x1p+0
MOVE GF@$op2 bool@false
JUMP $gltFinish
LABEL $gltFinish
PUSHS GF@$op1
PUSHS GF@$op2
RETURN
LABEL $neq
CALL $eq
NOTS
RETURN
LABEL $eq
POPS GF@$op2
POPS GF@$op1
TYPE GF@$op1Type GF@$op1
TYPE GF@$op2Type GF@$op2
JUMPIFEQ $eqFinish GF@$op1Type GF@$op2Type
JUMPIFEQ $eqFinish GF@$op1Type string@nil
JUMPIFEQ $eqFinish GF@$op2Type string@nil
JUMPIFEQ $eqNotEqual GF@$op1Type string@string
JUMPIFEQ $eqNotEqual GF@$op2Type string@string
JUMPIFEQ $eqOp1Int GF@$op1Type string@int
JUMPIFEQ $eqOp1Float GF@$op1Type string@float
JUMPIFEQ $eqOp1Bool GF@$op1Type string@bool
LABEL $eqOp1Int
JUMPIFEQ $eqOp1IntOp2Float GF@$op2Type string@float
JUMPIFEQ $eqOp1IntOp2Bool GF@$op2Type string@bool
LABEL $eqOp1IntOp2Float
INT2FLOAT GF@$op1 GF@$op1
JUMP $eqFinish
LABEL $eqOp1IntOp2Bool
MOVE GF@$temp GF@$op2
MOVE GF@$op2 int@1
JUMPIFEQ $eqFinish GF@$temp bool@true
MOVE GF@$op2 int@0
JUMP $eqFinish
LABEL $eqOp1Float
JUMPIFEQ $eqOp1FloatOp2Int GF@$op2Type string@int
JUMPIFEQ $eqOp1FloatOp2Bool GF@$op2Type string@bool
LABEL $eqOp1FloatOp2Int
INT2FLOAT GF@$op2 GF@$op2
JUMP $eqFinish
LABEL $eqOp1FloatOp2Bool
MOVE GF@$temp GF@$op2
MOVE GF@$op2 float@0x1p+0
JUMPIFEQ $eqFinish GF@$temp bool@true
MOVE GF@$op2 float@0x0p+0
JUMP $eqFinish
LABEL $eqOp1Bool
JUMPIFEQ $eqOp1BoolOp2Int GF@$op2Type string@int
JUMPIFEQ $eqOp1BoolOp2Float GF@$op2Type string@float
LABEL $eqOp1BoolOp2Int
MOVE GF@$temp GF@$op1
MOVE GF@$op1 int@1
JUMPIFEQ $eqFinish GF@$temp bool@true
MOVE GF@$op1 int@0
JUMP $eqFinish
LABEL $eqOp1BoolOp2Float
MOVE GF@$temp GF@$op1
MOVE GF@$op1 float@0x1p+0
JUMPIFEQ $eqFinish GF@$temp bool@true
MOVE GF@$op1 float@0x0p+0
JUMP $eqFinish
LABEL $eqNotEqual
PUSHS bool@false
RETURN
LABEL $eqFinish
PUSHS GF@$op1
PUSHS GF@$op2
EQS
RETURN
LABEL $$main
DEFVAR GF@a
<<<<<<< HEAD
PUSHS float@0x1.6cccccccccccdp+2
=======
PUSHS int@0
POPS GF@a
DEFVAR GF@b
PUSHS GF@a
>>>>>>> nested
PUSHS int@0
POPS GF@$op2
POPS GF@$op1
TYPE GF@$op1Type GF@$op1
TYPE GF@$op2Type GF@$op2
<<<<<<< HEAD
CALL $divs
POPS GF@a
=======
CALL $idivs
POPS GF@b
>>>>>>> nested
